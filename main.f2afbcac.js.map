{"version":3,"sources":["scripts/main.js"],"names":["queryList","document","querySelector","children","getEmployees","list","arrayList","map","item","itemEmployee","name","innerHTML","trim","position","getAttribute","salary","age","listForSort","sortList","sort","a","b","aSort","slice","split","Number","join","bSort","thisList","i","length","x","remove","createElement","setAttribute","append"],"mappings":";AAAA,aAgEC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9DD,IAAMA,EAAYC,SAASC,cAAc,MAAMC,SAEzCC,EAAe,SAASC,GAYrBC,OAXW,EAAID,GAAME,IAAI,SAAAC,GAQvBC,MAPc,CACnBC,KAAMF,EAAKG,UAAUC,OACrBC,SAAUL,EAAKM,aAAa,iBAC5BC,OAAQP,EAAKM,aAAa,eAC1BE,IAAKR,EAAKM,aAAa,gBASvBG,EAAcb,EAAaJ,GAE3BkB,EAAW,SAASb,GAqBjBA,OApBPA,EAAKc,KAAK,SAASC,EAAGC,GAChBC,IAAAA,EAAQF,EAAEL,OAAOQ,MAAM,EAAG,IAAIC,MAAM,KAExCF,EAAQG,OAAOH,EAAMI,KAAK,KAEtBC,IAAAA,EAAQN,EAAEN,OAAOQ,MAAM,EAAG,IAAIC,MAAM,KAIpCF,OAAAA,GAFJK,EAAQF,OAAOE,EAAMD,KAAK,OAGhB,EAGNJ,EAAQK,EACH,EAGF,IAGFtB,GAGTa,EAASD,GAIT,IAFA,IAAMW,EAAW3B,SAASC,cAAc,MAE/B2B,EAAI,EAAGA,EAAIZ,EAAYa,OAAQD,IAAK,CACrCE,IAAAA,EAAI9B,SAASC,cAAc,MAEjC6B,EAAEC,SAGJ,IAAK,IAAIH,EAAI,EAAGA,EAAIZ,EAAYa,OAAQD,IAAK,CACrCrB,IAAAA,EAAOP,SAASgC,cAAc,MAEpCzB,EAAKG,UAAYM,EAAYY,GAAGnB,KAChCF,EAAK0B,aAAa,gBAAiBjB,EAAYY,GAAGhB,UAClDL,EAAK0B,aAAa,cAAejB,EAAYY,GAAGd,QAChDP,EAAK0B,aAAa,WAAYjB,EAAYY,GAAGb,KAE7CY,EAASO,OAAO3B","file":"main.f2afbcac.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst queryList = document.querySelector('ul').children;\n\nconst getEmployees = function(list) {\n  const arrayList = [...list].map(item => {\n    const itemEmployee = {\n      name: item.innerHTML.trim(),\n      position: item.getAttribute('data-position'),\n      salary: item.getAttribute('data-salary'),\n      age: item.getAttribute('data-age'),\n    };\n\n    return itemEmployee;\n  });\n\n  return arrayList;\n};\n\nconst listForSort = getEmployees(queryList);\n\nconst sortList = function(list) {\n  list.sort(function(a, b) {\n    let aSort = a.salary.slice(1, 10).split(',');\n\n    aSort = Number(aSort.join(''));\n\n    let bSort = b.salary.slice(1, 10).split(',');\n\n    bSort = Number(bSort.join(''));\n\n    if (aSort > bSort) {\n      return -1;\n    }\n\n    if (aSort < bSort) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  return list;\n};\n\nsortList(listForSort);\n\nconst thisList = document.querySelector('ul');\n\nfor (let i = 0; i < listForSort.length; i++) {\n  const x = document.querySelector('li');\n\n  x.remove();\n}\n\nfor (let i = 0; i < listForSort.length; i++) {\n  const item = document.createElement('li');\n\n  item.innerHTML = listForSort[i].name;\n  item.setAttribute('data-position', listForSort[i].position);\n  item.setAttribute('data-salary', listForSort[i].salary);\n  item.setAttribute('data-age', listForSort[i].age);\n\n  thisList.append(item);\n}\n"]}